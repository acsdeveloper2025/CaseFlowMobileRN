name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'
  JAVA_VERSION: '17'
  RUBY_VERSION: '2.7'

jobs:
  # Lint and Test Job
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Run Prettier check
      run: npx prettier --check .
      
    - name: Run TypeScript check
      run: npx tsc --noEmit
      
    - name: Run tests
      run: npm run test:coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  # Security Scan Job
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run npm audit
      run: npm audit --audit-level=moderate
      
    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

  # Android Build Job
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ env.JAVA_VERSION }}
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install dependencies
      run: npm ci
      
    - name: Create environment file
      run: |
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          cp .env.production .env
        else
          cp .env.staging .env
        fi
        
    - name: Set environment variables
      run: |
        echo "API_KEY=${{ secrets.API_KEY }}" >> .env
        echo "API_BASE_URL=${{ secrets.API_BASE_URL }}" >> .env
        
    - name: Make gradlew executable
      run: chmod +x android/gradlew
      
    - name: Build Android APK
      run: |
        cd android
        ./gradlew assembleRelease
        
    - name: Upload Android APK
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: android/app/build/outputs/apk/release/app-release.apk

  # iOS Build Job
  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs: [lint-and-test]
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
        bundler-cache: true
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create environment file
      run: |
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          cp .env.production .env
        else
          cp .env.staging .env
        fi
        
    - name: Set environment variables
      run: |
        echo "API_KEY=${{ secrets.API_KEY }}" >> .env
        echo "API_BASE_URL=${{ secrets.API_BASE_URL }}" >> .env
        
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        
    - name: Build iOS app
      run: |
        xcodebuild -workspace ios/CaseFlowMobileRN.xcworkspace \
          -scheme CaseFlowMobileRN \
          -configuration Release \
          -destination generic/platform=iOS \
          -archivePath ios/build/CaseFlowMobileRN.xcarchive \
          archive
          
    - name: Export IPA
      run: |
        xcodebuild -exportArchive \
          -archivePath ios/build/CaseFlowMobileRN.xcarchive \
          -exportPath ios/build \
          -exportOptionsPlist ios/ExportOptions.plist
          
    - name: Upload iOS IPA
      uses: actions/upload-artifact@v4
      with:
        name: ios-ipa
        path: ios/build/*.ipa
